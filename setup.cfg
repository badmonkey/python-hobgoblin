
[metadata]
name = hobgoblin
author = Michael Fagan
author_email = michael.charles.fagan@gmail.com
license = MIT
description = a collection of utility code
keywords = development
url = https://github.com/badmonkey/
classifiers =
    Development Status :: 4 - Beta
    Intended Audience :: Developers
    License :: OSI Approved :: MIT License
    Programming Language :: Python :: 3.10
    Topic :: Utilities
    Private :: Do Not Upload to pypi server

[options]
versioning=dev
python_requires = >=3.10
zip_safe = True
include_package_data = True
packages = find:
package_dir =
    =src
install_requires =
    atpublic
    deprecated
    wrapt
    click
    pygit2
    prompt-toolkit
    pluginlib
    # decorum
    # clickclick
    # click-didyoumean
    # click-plugins
    # click-help-colors
    # pypika
    # timeout-decorator
    # pyyaml
    # sqlparse
    # python-dateutil
    # pytimeparse
    # urwid
    # paramiko
    # blessed
    # scalpl
    # jsonpath-ng
    # #typed-json-dataclass
    # dataclasses-json
    # datafiles
    # dataclass-builder
    # config-decorator

[options.extras_require]
dev =
    pipdeptree
    pylama
    black
    isort
    pylint
    mccabe
    pyflakes
    mypy
    hypothesis

unicode =
    text-unidecode

audit =
    pip-audit

[bdist_wheel]
universal = 0

[mypy]
follow_imports = skip
ignore_missing_imports = True
warn_incomplete_stub = False

[isort]
line_length=100
multi_line_output=3
include_trailing_comma=true

[pylama]
format = pylint
skip = .eggs/*,tmp/*,docs/*,tests/*
linters = pyflakes,mccabe,pylint,mypy
ignore = W1201,W1202,W1203

#ignore = C0111,C0301,C0330,C0411,C0412,C0414,R0201,R0902,R0903,W0223,W0511,W0603,W1201,W1202,W1203
#
# C0111 missing docstring
# C0301 line too long
# C0330 wrong hanging indentation
# C0411 wrong improt order
# C0412 imports are not grouped
# C0414 useless import alias
# R0201 Method could be a function
# R0902 too many instance variables
# R0903 too few public methods
# W0223 abstract method not overridden
# W0511 FIXME or XXX detected
# W0603 using the global statement
# W1201 specify logging format as parameters
# W1202 use logging parameters instead of % formatting
# W1203 use logging parameters instead of f-string formatting
#

[pylama:pyflakes]
builtins = _,public,private

[pylama:pylint]
max_line_length = 100
dummy-variables-rgx = _.*
additional-builtins = public,private
init-import = no
variable-rgx=[a-z_][a-z0-9_]{0,30}$
argument-rgx=[a-z_][a-z0-9_]{0,30}$

[tool:pytest]
testpaths = src/tests
filterwarnings =
    ignore::DeprecationWarning
